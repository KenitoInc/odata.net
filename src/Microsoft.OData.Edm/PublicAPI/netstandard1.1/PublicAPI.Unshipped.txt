Microsoft.OData.Edm.EdmTargetPath
Microsoft.OData.Edm.EdmTargetPath.EdmTargetPath(params Microsoft.OData.Edm.IEdmElement[] segments) -> void
Microsoft.OData.Edm.EdmTargetPath.EdmTargetPath(System.Collections.Generic.IEnumerable<Microsoft.OData.Edm.IEdmElement> segments) -> void
Microsoft.OData.Edm.EdmTargetPath.Path.get -> string
Microsoft.OData.Edm.EdmTargetPath.Segments.get -> System.Collections.Generic.IReadOnlyList<Microsoft.OData.Edm.IEdmElement>
Microsoft.OData.Edm.IEdmTargetPath
Microsoft.OData.Edm.IEdmTargetPath.Path.get -> string
Microsoft.OData.Edm.IEdmTargetPath.Segments.get -> System.Collections.Generic.IReadOnlyList<Microsoft.OData.Edm.IEdmElement>
override Microsoft.OData.Edm.EdmTargetPath.Equals(object obj) -> bool
override Microsoft.OData.Edm.EdmTargetPath.GetHashCode() -> int
static Microsoft.OData.Edm.ExtensionMethods.FindVocabularyAnnotations<T>(this Microsoft.OData.Edm.IEdmModel model, string targetPath, Microsoft.OData.Edm.Vocabularies.IEdmTerm term) -> System.Collections.Generic.IEnumerable<T>
static Microsoft.OData.Edm.ExtensionMethods.GetTargetPath(this Microsoft.OData.Edm.IEdmModel model, string targetPath, bool ignoreCase = true) -> Microsoft.OData.Edm.IEdmTargetPath
static Microsoft.OData.Edm.ExtensionMethods.GetTargetPathAnnotations(this Microsoft.OData.Edm.IEdmModel model, string targetPath) -> System.Collections.Generic.IEnumerable<Microsoft.OData.Edm.Vocabularies.IEdmVocabularyAnnotation>
